Search.setIndex({"docnames": ["index", "markdown/base", "markdown/classifier_cv", "markdown/defaults", "markdown/metrics", "markdown/optimizer_base", "markdown/regression_cv", "markdown/transforms", "markdown/types", "modules", "treemachine", "treemachine.auto_trees"], "filenames": ["index.rst", "markdown/base.md", "markdown/classifier_cv.md", "markdown/defaults.md", "markdown/metrics.md", "markdown/optimizer_base.md", "markdown/regression_cv.md", "markdown/transforms.md", "markdown/types.md", "modules.rst", "treemachine.rst", "treemachine.auto_trees.rst"], "titles": ["Tree Machine: An AutoML companion to fit tree models easily", "base.py", "classifier_cv.py", "defaults.py", "metrics.py", "optimizer_base.py", "regression_cv.py", "transforms.py", "types.py", "bezzanlabs", "treemachine package", "treemachine.auto_trees package"], "terms": {"bezzanlab": 0, "treemachin": [0, 9], "packag": 9, "subpackag": [0, 9], "modul": [0, 3, 4, 7, 8, 9], "content": [0, 9], "index": 0, "search": [0, 6, 11], "page": 0, "auto_tre": [9, 10], "submodul": [8, 9, 10], "base": [0, 2, 3, 5, 9, 10], "classifier_cv": [9, 10], "default": [6, 9, 10], "metric": [1, 2, 6, 9, 10], "optimizer_bas": [9, 10], "regression_cv": [9, 10], "transform": [9, 10], "type": [1, 2, 3, 5, 6, 7, 9, 10], "baseautotre": [1, 2, 6, 10, 11], "__init__": [10, 11], "explain": [10, 11], "explainer_": [10, 11], "model_": [10, 11], "predict": [1, 2, 8, 10, 11], "texplainerresult": [10, 11], "mean_valu": [10, 11], "shap_valu": [10, 11], "classifiercv": [2, 10, 11], "feature_importances_": [10, 11], "fit": [1, 2, 6, 7, 10, 11], "predict_proba": [10, 11], "score": [2, 4, 5, 6, 10, 11], "set_score_request": [10, 11], "classifiercvopt": [10, 11], "distribut": [3, 6, 10, 11], "interact": [2, 6, 10, 11], "monotone_constraint": [10, 11], "sampler": [2, 10, 11], "tusrdistribut": [3, 10, 11], "colsample_bylevel": [10, 11], "colsample_bynod": [10, 11], "colsample_bytre": [10, 11], "eta": [3, 10, 11], "gamma": [3, 10, 11], "max_depth": [3, 10, 11], "n_estim": [3, 10, 11], "reg_alpha": [3, 10, 11], "reg_lambda": [3, 10, 11], "get_param_distribut": [3, 10, 11], "optimizercvmixin": [1, 5, 10, 11], "cv_results_": [5, 10, 11], "is_optim": [10, 11], "is_setup": [10, 11], "n_trials_": [10, 11], "optimizer_": [10, 11], "return_train_score_": [10, 11], "setup": [5, 10, 11], "studi": [5, 10, 11], "study_": [10, 11], "timeout_": [10, 11], "regressioncv": [6, 10, 11], "regressioncvopt": [6, 10, 11], "ident": [7, 10, 11], "api": [7, 10], "entrypoint": 10, "class": [1, 2, 3, 5, 6, 7, 11], "defin": [1, 2, 3, 4, 5, 6, 7, 8, 11], "auto": [0, 3, 11], "tree": [1, 3, 6, 8, 11], "cv": [0, 2, 6, 11], "n_trial": 11, "100": 11, "timeout": [1, 2, 5, 11], "180": 11, "n_job": 11, "1": 11, "sourc": 11, "baseestim": [1, 11], "baseauto": 11, "all": [0, 11], "constructor": [2, 11], "paramet": [0, 2, 3, 4, 5, 6, 11], "str": 11, "loss": 11, "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11], "estim": [5, 11], "process": [2, 5, 6, 7, 8, 11], "basecrossvalid": 11, "splitter": 11, "object": [0, 3, 5, 8, 11], "when": [8, 11], "model": [1, 2, 3, 4, 6, 11], "int": 11, "number": [1, 2, 5, 11], "optim": [0, 1, 2, 3, 5, 6, 11], "trial": [1, 2, 5, 11], "find": [2, 5, 11], "second": 11, "stop": 11, "intern": 11, "x": 11, "explainer_param": 11, "data": [0, 1, 5, 7, 8, 11], "shap": [1, 11], "valu": [1, 3, 5, 8, 11], "return": [5, 7, 11], "explan": [1, 11], "treeexplain": 11, "xgbmodel": 11, "ndarrai": 11, "ani": [6, 11], "dtype": 11, "float64": [8, 11], "typeddict": [3, 6, 11], "describ": 11, "an": [2, 5, 6, 7, 8, 11], "expect": [1, 7, 8, 11], "result": [5, 11], "come": 11, "from": [1, 2, 3, 4, 11], "call": [5, 7, 11], "If": 11, "regressor": [6, 11], "two": [4, 11], "classifi": [0, 2, 11], "averag": [4, 11], "multi": 11, "arrai": [1, 8, 11], "each": [4, 5, 11], "contribut": 11, "row": 11, "variabl": 11, "list": 11, "float": 11, "instanti": [1, 11], "f1": [4, 11], "kfold": 11, "n_split": 11, "5": [1, 2, 3, 4, 5, 6, 7, 8, 11], "random_st": 11, "none": [7, 8, 11], "shuffl": 11, "fals": 11, "classifiermixin": [2, 11], "y": 11, "fit_param": 11, "bayesian": [0, 2, 5, 6, 11], "datafram": [1, 5, 8, 11], "input": [1, 2, 3, 5, 7, 8, 11], "seri": [8, 11], "actual": [5, 7, 8, 11], "target": [5, 7, 8, 11], "dictionari": [3, 4, 11], "contain": [4, 5, 7, 11], "specif": [0, 1, 4, 11], "pass": [1, 7, 11], "xgbclassifi": 11, "probabl": 11, "sample_weight": 11, "bool": 11, "unchang": [7, 11], "request": 11, "metadata": 11, "method": [1, 2, 4, 5, 6, 7, 8, 11], "note": 11, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11], "i": [0, 1, 2, 3, 4, 5, 6, 7, 11], "onli": 11, "relev": 11, "enable_metadata_rout": 11, "true": 11, "see": 11, "sklearn": [0, 1, 2, 4, 5, 6, 7, 8, 11], "set_config": 11, "pleas": 11, "user": [0, 3, 6, 11], "guid": 11, "how": 11, "rout": 11, "mechan": 11, "work": [0, 1, 5, 8, 11], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11], "option": [2, 6, 11], "ar": [0, 2, 8, 11], "provid": [1, 2, 3, 4, 5, 6, 7, 8, 11], "ignor": 11, "meta": 11, "rais": 11, "error": [4, 8, 11], "should": [0, 11], "given": [5, 11], "alia": [3, 11], "instead": 11, "origin": 11, "name": [3, 7, 11], "util": [3, 5, 6, 7, 11], "metadata_rout": 11, "retain": 11, "exist": 11, "allow": [2, 3, 4, 6, 7, 8, 11], "you": 11, "chang": [0, 11], "some": 11, "other": 11, "new": 11, "version": 11, "3": [1, 2, 3, 4, 5, 6, 7, 8, 11], "sub": 11, "e": 11, "g": 11, "insid": [0, 11], "pipelin": [0, 5, 6, 7, 8, 11], "otherwis": 11, "ha": 11, "effect": 11, "self": 11, "updat": 11, "avail": 11, "basesampl": 11, "imblearn": [2, 8, 11], "monoton": [2, 6, 11], "direct": 11, "0": 11, "mean": [4, 11], "increas": 11, "decreas": 11, "permit": 11, "relationship": 11, "bound": 11, "hyperparamet": [0, 1, 2, 3, 5, 6, 11], "dure": [0, 6, 11], "dict": 11, "minim": [3, 11], "configur": [1, 3, 5, 11], "file": [1, 2, 3, 4, 5, 6, 8, 11], "accept": [2, 11], "respect": [7, 11], "best": [0, 2, 5, 6, 11], "http": 11, "xgboost": [0, 1, 2, 6, 11], "readthedoc": 11, "io": 11, "en": 11, "latest": 11, "html": 11, "more": [1, 4, 8, 11], "detail": 11, "your": [0, 11], "union": 11, "tupl": 11, "user_param": 11, "categoricaldistribut": 11, "intdistribut": 11, "floatdistribut": 11, "optimis": 11, "add": [5, 11], "capabl": [1, 5, 8, 11], "properti": [5, 11], "optunasearchcv": [5, 11], "return_train_scor": 11, "set": [2, 5, 8, 11], "boll": 11, "indic": 11, "train": [0, 2, 5, 6, 11], "post": 11, "regress": [0, 4, 6, 11], "mse": [4, 11], "regressormixin": [6, 11], "xgbregressor": [6, 11], "need": [7, 11], "our": [0, 11], "transformermixin": 11, "perform": [2, 5, 6, 7, 11], "receiv": [1, 11], "definit": [4, 8, 11], "implement": [1, 2, 5, 6, 7, 11], "classif": [2, 4, 11], "aim": 0, "give": [0, 5], "simpl": [0, 7], "interfac": [0, 2, 7], "workhors": 0, "tabular": 0, "mani": 0, "applic": 0, "simplifi": 0, "tune": [0, 2, 3, 5, 6], "deploy": 0, "select": 0, "overal": [0, 3, 8], "backend": 0, "can": [0, 6, 7, 8], "last": 0, "step": [0, 6, 7], "just": 0, "issu": 0, "command": 0, "python": [0, 8], "m": 0, "pip": 0, "system": [0, 3], "wa": [0, 1, 2, 3, 4, 5, 6, 7, 8], "test": 0, "linux": 0, "maco": 0, "To": 0, "run": [0, 5], "follow": 0, "termin": 0, "make": [0, 2], "proce": 0, "depend": 0, "py": 0, "summari": 0, "descript": 0, "_": [0, 2, 3, 5, 6], "code": [1, 2, 3, 4, 5, 6, 7, 8], "autom": [1, 2, 3, 6], "machin": [1, 4, 5, 7, 8], "learn": [1, 2, 3, 4, 5, 6, 7, 8], "built": 1, "numpi": [1, 2, 5, 6, 8], "panda": [1, 2, 5, 6, 8], "pydant": [1, 2, 3, 5, 6], "serv": [1, 3], "foundat": 1, "build": 1, "inherit": 1, "scikit": [1, 2, 4, 6, 7, 8], "": [1, 2, 3, 5, 6], "custom": [1, 2, 6, 7, 8], "framework": [1, 3], "shaplei": 1, "addit": [1, 2], "design": [1, 5, 7, 8], "includ": [1, 2, 3, 4, 5, 6], "function": [1, 3, 4, 5, 6, 8], "cross": [1, 2, 5, 6], "valid": [1, 2, 5, 6], "It": [1, 2, 3, 4, 5, 6], "check": [1, 2, 5, 8], "ensur": [1, 2, 3, 8], "kei": [1, 3, 4], "featur": [1, 6, 7], "customiz": 1, "strategi": [1, 2, 5, 6], "evalu": [1, 2, 4, 6], "flexibl": 1, "handl": 1, "both": [1, 7], "also": [1, 2, 5, 8], "helper": 1, "preprocess": [1, 6], "correct": [1, 2], "format": 1, "meant": 1, "directli": 1, "parent": 1, "document": [1, 2, 3, 4, 5, 6, 7, 8], "gener": [1, 2, 3, 4, 5, 6, 7, 8], "claud": [1, 2, 3, 4, 5, 6, 7, 8], "sonnet": [1, 2, 3, 4, 5, 6, 7, 8], "20240620": [1, 2, 3, 4, 5, 6, 7, 8], "extens": [2, 3, 4], "which": [2, 5, 6, 8], "extend": [2, 6], "incorpor": 2, "high": 2, "level": 2, "support": [2, 6], "variou": [2, 3, 4, 6], "sampl": [2, 4], "constraint": [2, 6], "main": [2, 6, 8], "compon": [2, 3], "initi": [2, 6], "job": 2, "parallel": 2, "like": [2, 5, 7], "These": [2, 8], "specifi": [2, 3, 5, 6, 7, 8], "within": [2, 6, 7], "rang": [2, 3], "optuna": [3, 5], "begin": 3, "import": [3, 4, 6], "necessari": 3, "alias": [3, 7, 8], "introduc": [3, 5], "tdistribut": 3, "map": 3, "A": 3, "structur": [3, 8], "common": [3, 8], "rate": 3, "regular": 3, "subset": 3, "start": 3, "point": 3, "doesn": 3, "t": 3, "own": 3, "take": [3, 5], "convert": 3, "them": [3, 4], "appropri": 3, "validate_cal": 3, "decor": 3, "safeti": 3, "arbitrari": 3, "its": [3, 7], "functool": 4, "collect": [4, 7], "commonli": 4, "task": [4, 8], "organ": 4, "regression_metr": 4, "classification_metr": 4, "four": [4, 8], "absolut": 4, "mae": 4, "percentag": 4, "mape": 4, "median": 4, "squar": 4, "offer": 4, "varieti": 4, "differ": [4, 6], "variat": 4, "precis": [4, 8], "recal": 4, "macro": 4, "micro": 4, "weight": 4, "partial": 4, "creat": [4, 5], "appli": 4, "requir": 4, "easi": [4, 6], "access": [4, 5, 6], "part": 4, "codebas": 4, "central": 4, "locat": 4, "promot": 4, "consist": 4, "across": 4, "project": [4, 7], "warn": 5, "mixin": 5, "up": 5, "analyz": 5, "experi": 5, "whether": 5, "statu": 5, "retriev": 5, "core": 5, "_fit": 5, "grid": 5, "conveni": 5, "through": [5, 6, 7], "underli": [5, 6], "solut": 6, "emploi": 6, "encapsul": 6, "combin": 6, "potenti": [6, 8], "after": 6, "workflow": [7, 8], "particularli": [7, 8], "compat": [7, 8], "current": 7, "singl": 7, "yet": 7, "As": 7, "suggest": 7, "essenti": 7, "scenario": 7, "where": 7, "particular": 7, "adher": 7, "op": 7, "simpli": 7, "instanc": 7, "itself": 7, "while": 7, "unmodifi": 7, "seamlessli": 7, "integr": 7, "hint": [7, 8], "output": [7, 8], "being": 7, "elsewher": 7, "repres": [7, 8], "throughout": 8, "improv": 8, "readabl": 8, "maintain": 8, "clear": 8, "concis": 8, "represent": 8, "either": 8, "alwai": 8, "pipe": 8, "imbalanc": 8, "develop": 8, "help": 8, "catch": 8, "relat": 8, "earli": 8, "qualiti": 8, "further": 8, "enhanc": 8, "numer": 8}, "objects": {"": [[10, 0, 0, "-", "treemachine"]], "treemachine": [[11, 0, 0, "-", "auto_trees"]], "treemachine.auto_trees": [[11, 0, 0, "-", "base"], [11, 0, 0, "-", "classifier_cv"], [11, 0, 0, "-", "defaults"], [11, 0, 0, "-", "metrics"], [11, 0, 0, "-", "optimizer_base"], [11, 0, 0, "-", "regression_cv"], [11, 0, 0, "-", "transforms"], [11, 0, 0, "-", "types"]], "treemachine.auto_trees.base": [[11, 1, 1, "", "BaseAutoTree"], [11, 1, 1, "", "TExplainerResults"]], "treemachine.auto_trees.base.BaseAutoTree": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "explain"], [11, 3, 1, "", "explainer_"], [11, 3, 1, "", "model_"], [11, 2, 1, "", "predict"]], "treemachine.auto_trees.base.TExplainerResults": [[11, 3, 1, "", "mean_value"], [11, 3, 1, "", "shap_values"]], "treemachine.auto_trees.classifier_cv": [[11, 1, 1, "", "ClassifierCV"], [11, 1, 1, "", "ClassifierCVOptions"]], "treemachine.auto_trees.classifier_cv.ClassifierCV": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "feature_importances_"], [11, 2, 1, "", "fit"], [11, 3, 1, "", "model_"], [11, 2, 1, "", "predict_proba"], [11, 2, 1, "", "score"], [11, 2, 1, "", "set_score_request"]], "treemachine.auto_trees.classifier_cv.ClassifierCVOptions": [[11, 3, 1, "", "distributions"], [11, 3, 1, "", "interactions"], [11, 3, 1, "", "monotone_constraints"], [11, 3, 1, "", "sampler"]], "treemachine.auto_trees.defaults": [[11, 1, 1, "", "TUsrDistribution"], [11, 4, 1, "", "get_param_distributions"]], "treemachine.auto_trees.defaults.TUsrDistribution": [[11, 3, 1, "", "colsample_bylevel"], [11, 3, 1, "", "colsample_bynode"], [11, 3, 1, "", "colsample_bytree"], [11, 3, 1, "", "eta"], [11, 3, 1, "", "gamma"], [11, 3, 1, "", "max_depth"], [11, 3, 1, "", "n_estimators"], [11, 3, 1, "", "reg_alpha"], [11, 3, 1, "", "reg_lambda"]], "treemachine.auto_trees.optimizer_base": [[11, 1, 1, "", "OptimizerCVMixIn"]], "treemachine.auto_trees.optimizer_base.OptimizerCVMixIn": [[11, 5, 1, "", "cv_results_"], [11, 5, 1, "", "is_optimized"], [11, 5, 1, "", "is_setup"], [11, 3, 1, "", "n_trials_"], [11, 3, 1, "", "optimizer_"], [11, 3, 1, "", "return_train_score_"], [11, 2, 1, "", "setup"], [11, 5, 1, "", "study"], [11, 3, 1, "", "study_"], [11, 3, 1, "", "timeout_"]], "treemachine.auto_trees.regression_cv": [[11, 1, 1, "", "RegressionCV"], [11, 1, 1, "", "RegressionCVOptions"]], "treemachine.auto_trees.regression_cv.RegressionCV": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "feature_importances_"], [11, 2, 1, "", "fit"], [11, 3, 1, "", "model_"], [11, 2, 1, "", "score"], [11, 2, 1, "", "set_score_request"]], "treemachine.auto_trees.regression_cv.RegressionCVOptions": [[11, 3, 1, "", "distributions"], [11, 3, 1, "", "interactions"], [11, 3, 1, "", "monotone_constraints"]], "treemachine.auto_trees.transforms": [[11, 1, 1, "", "Identity"]], "treemachine.auto_trees.transforms.Identity": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "fit"], [11, 2, 1, "", "transform"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "api": 0, "document": 0, "doc": 0, "indic": 0, "tabl": 0, "bezzanlab": 9, "treemachin": [10, 11], "packag": [0, 10, 11], "subpackag": 10, "modul": [10, 11], "content": [10, 11], "auto_tre": 11, "submodul": 11, "base": [1, 11], "classifier_cv": [2, 11], "default": [3, 11], "metric": [4, 11], "optimizer_bas": [5, 11], "regression_cv": [6, 11], "transform": [7, 11], "type": [8, 11], "tree": 0, "machin": 0, "an": 0, "automl": 0, "companion": 0, "fit": 0, "model": 0, "easili": 0, "autotre": 0, "instal": 0, "setup": 0, "develop": 0, "tree_machin": 0, "A": 0, "g": 0, "py": [1, 2, 3, 4, 5, 6, 7, 8], "summari": [1, 2, 3, 4, 5, 6, 7, 8], "depend": [1, 2, 3, 4, 5, 6, 7, 8], "standard": [1, 2, 3, 4, 5, 6, 7, 8], "librari": [1, 2, 3, 4, 5, 6, 7, 8], "other": [1, 2, 3, 4, 5, 6, 7, 8], "descript": [1, 2, 3, 4, 5, 6, 7, 8]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Tree Machine: An AutoML companion to fit tree models easily": [[0, "tree-machine-an-automl-companion-to-fit-tree-models-easily"]], "AutoTrees": [[0, "autotrees"]], "Installing the package": [[0, "installing-the-package"]], "Setup for development": [[0, "setup-for-development"]], "Welcome to tree_machine documentation!": [[0, "welcome-to-tree-machine-documentation"]], "API Docs": [[0, null]], "A-G documentation": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "base.py": [[1, "base-py"]], "Summary": [[1, "summary"], [2, "summary"], [3, "summary"], [4, "summary"], [5, "summary"], [6, "summary"], [7, "summary"], [8, "summary"]], "Dependencies": [[1, "dependencies"], [2, "dependencies"], [3, "dependencies"], [4, "dependencies"], [5, "dependencies"], [6, "dependencies"], [7, "dependencies"], [8, "dependencies"]], "Standard Library": [[1, "standard-library"], [2, "standard-library"], [3, "standard-library"], [4, "standard-library"], [5, "standard-library"], [6, "standard-library"], [7, "standard-library"], [8, "standard-library"]], "Other": [[1, "other"], [2, "other"], [3, "other"], [4, "other"], [5, "other"], [6, "other"], [7, "other"], [8, "other"]], "Description": [[1, "description"], [2, "description"], [3, "description"], [4, "description"], [5, "description"], [6, "description"], [7, "description"], [8, "description"]], "classifier_cv.py": [[2, "classifier-cv-py"]], "defaults.py": [[3, "defaults-py"]], "metrics.py": [[4, "metrics-py"]], "optimizer_base.py": [[5, "optimizer-base-py"]], "regression_cv.py": [[6, "regression-cv-py"]], "transforms.py": [[7, "transforms-py"]], "types.py": [[8, "types-py"]], "bezzanlabs": [[9, "bezzanlabs"]], "treemachine package": [[10, "treemachine-package"]], "Subpackages": [[10, "subpackages"]], "Module contents": [[10, "module-treemachine"], [11, "module-treemachine.auto_trees"]], "treemachine.auto_trees package": [[11, "treemachine-auto-trees-package"]], "Submodules": [[11, "submodules"]], "treemachine.auto_trees.base module": [[11, "module-treemachine.auto_trees.base"]], "treemachine.auto_trees.classifier_cv module": [[11, "module-treemachine.auto_trees.classifier_cv"]], "treemachine.auto_trees.defaults module": [[11, "module-treemachine.auto_trees.defaults"]], "treemachine.auto_trees.metrics module": [[11, "module-treemachine.auto_trees.metrics"]], "treemachine.auto_trees.optimizer_base module": [[11, "module-treemachine.auto_trees.optimizer_base"]], "treemachine.auto_trees.regression_cv module": [[11, "module-treemachine.auto_trees.regression_cv"]], "treemachine.auto_trees.transforms module": [[11, "module-treemachine.auto_trees.transforms"]], "treemachine.auto_trees.types module": [[11, "module-treemachine.auto_trees.types"]]}, "indexentries": {"module": [[10, "module-treemachine"], [11, "module-treemachine.auto_trees"], [11, "module-treemachine.auto_trees.base"], [11, "module-treemachine.auto_trees.classifier_cv"], [11, "module-treemachine.auto_trees.defaults"], [11, "module-treemachine.auto_trees.metrics"], [11, "module-treemachine.auto_trees.optimizer_base"], [11, "module-treemachine.auto_trees.regression_cv"], [11, "module-treemachine.auto_trees.transforms"], [11, "module-treemachine.auto_trees.types"]], "treemachine": [[10, "module-treemachine"]], "baseautotree (class in treemachine.auto_trees.base)": [[11, "treemachine.auto_trees.base.BaseAutoTree"]], "classifiercv (class in treemachine.auto_trees.classifier_cv)": [[11, "treemachine.auto_trees.classifier_cv.ClassifierCV"]], "classifiercvoptions (class in treemachine.auto_trees.classifier_cv)": [[11, "treemachine.auto_trees.classifier_cv.ClassifierCVOptions"]], "identity (class in treemachine.auto_trees.transforms)": [[11, "treemachine.auto_trees.transforms.Identity"]], "optimizercvmixin (class in treemachine.auto_trees.optimizer_base)": [[11, "treemachine.auto_trees.optimizer_base.OptimizerCVMixIn"]], "regressioncv (class in treemachine.auto_trees.regression_cv)": [[11, "treemachine.auto_trees.regression_cv.RegressionCV"]], "regressioncvoptions (class in treemachine.auto_trees.regression_cv)": [[11, "treemachine.auto_trees.regression_cv.RegressionCVOptions"]], "texplainerresults (class in treemachine.auto_trees.base)": [[11, "treemachine.auto_trees.base.TExplainerResults"]], "tusrdistribution (class in treemachine.auto_trees.defaults)": [[11, "treemachine.auto_trees.defaults.TUsrDistribution"]], "__init__() (treemachine.auto_trees.base.baseautotree method)": [[11, "treemachine.auto_trees.base.BaseAutoTree.__init__"]], "__init__() (treemachine.auto_trees.classifier_cv.classifiercv method)": [[11, "treemachine.auto_trees.classifier_cv.ClassifierCV.__init__"]], "__init__() (treemachine.auto_trees.regression_cv.regressioncv method)": [[11, "treemachine.auto_trees.regression_cv.RegressionCV.__init__"]], "__init__() (treemachine.auto_trees.transforms.identity method)": [[11, "treemachine.auto_trees.transforms.Identity.__init__"]], "colsample_bylevel (treemachine.auto_trees.defaults.tusrdistribution attribute)": [[11, "treemachine.auto_trees.defaults.TUsrDistribution.colsample_bylevel"]], "colsample_bynode (treemachine.auto_trees.defaults.tusrdistribution attribute)": [[11, "treemachine.auto_trees.defaults.TUsrDistribution.colsample_bynode"]], "colsample_bytree (treemachine.auto_trees.defaults.tusrdistribution attribute)": [[11, "treemachine.auto_trees.defaults.TUsrDistribution.colsample_bytree"]], "cv_results_ (treemachine.auto_trees.optimizer_base.optimizercvmixin property)": [[11, "treemachine.auto_trees.optimizer_base.OptimizerCVMixIn.cv_results_"]], "distributions (treemachine.auto_trees.classifier_cv.classifiercvoptions attribute)": [[11, "treemachine.auto_trees.classifier_cv.ClassifierCVOptions.distributions"]], "distributions (treemachine.auto_trees.regression_cv.regressioncvoptions attribute)": [[11, "treemachine.auto_trees.regression_cv.RegressionCVOptions.distributions"]], "eta (treemachine.auto_trees.defaults.tusrdistribution attribute)": [[11, "treemachine.auto_trees.defaults.TUsrDistribution.eta"]], "explain() (treemachine.auto_trees.base.baseautotree method)": [[11, "treemachine.auto_trees.base.BaseAutoTree.explain"]], "explainer_ (treemachine.auto_trees.base.baseautotree attribute)": [[11, "treemachine.auto_trees.base.BaseAutoTree.explainer_"]], "feature_importances_ (treemachine.auto_trees.classifier_cv.classifiercv attribute)": [[11, "treemachine.auto_trees.classifier_cv.ClassifierCV.feature_importances_"]], "feature_importances_ (treemachine.auto_trees.regression_cv.regressioncv attribute)": [[11, "treemachine.auto_trees.regression_cv.RegressionCV.feature_importances_"]], "fit() (treemachine.auto_trees.classifier_cv.classifiercv method)": [[11, "treemachine.auto_trees.classifier_cv.ClassifierCV.fit"]], "fit() (treemachine.auto_trees.regression_cv.regressioncv method)": [[11, "treemachine.auto_trees.regression_cv.RegressionCV.fit"]], "fit() (treemachine.auto_trees.transforms.identity method)": [[11, "treemachine.auto_trees.transforms.Identity.fit"]], "gamma (treemachine.auto_trees.defaults.tusrdistribution attribute)": [[11, "treemachine.auto_trees.defaults.TUsrDistribution.gamma"]], "get_param_distributions() (in module treemachine.auto_trees.defaults)": [[11, "treemachine.auto_trees.defaults.get_param_distributions"]], "interactions (treemachine.auto_trees.classifier_cv.classifiercvoptions attribute)": [[11, "treemachine.auto_trees.classifier_cv.ClassifierCVOptions.interactions"]], "interactions (treemachine.auto_trees.regression_cv.regressioncvoptions attribute)": [[11, "treemachine.auto_trees.regression_cv.RegressionCVOptions.interactions"]], "is_optimized (treemachine.auto_trees.optimizer_base.optimizercvmixin property)": [[11, "treemachine.auto_trees.optimizer_base.OptimizerCVMixIn.is_optimized"]], "is_setup (treemachine.auto_trees.optimizer_base.optimizercvmixin property)": [[11, "treemachine.auto_trees.optimizer_base.OptimizerCVMixIn.is_setup"]], "max_depth (treemachine.auto_trees.defaults.tusrdistribution attribute)": [[11, "treemachine.auto_trees.defaults.TUsrDistribution.max_depth"]], "mean_value (treemachine.auto_trees.base.texplainerresults attribute)": [[11, "treemachine.auto_trees.base.TExplainerResults.mean_value"]], "model_ (treemachine.auto_trees.base.baseautotree attribute)": [[11, "treemachine.auto_trees.base.BaseAutoTree.model_"]], "model_ (treemachine.auto_trees.classifier_cv.classifiercv attribute)": [[11, "treemachine.auto_trees.classifier_cv.ClassifierCV.model_"]], "model_ (treemachine.auto_trees.regression_cv.regressioncv attribute)": [[11, "treemachine.auto_trees.regression_cv.RegressionCV.model_"]], "monotone_constraints (treemachine.auto_trees.classifier_cv.classifiercvoptions attribute)": [[11, "treemachine.auto_trees.classifier_cv.ClassifierCVOptions.monotone_constraints"]], "monotone_constraints (treemachine.auto_trees.regression_cv.regressioncvoptions attribute)": [[11, "treemachine.auto_trees.regression_cv.RegressionCVOptions.monotone_constraints"]], "n_estimators (treemachine.auto_trees.defaults.tusrdistribution attribute)": [[11, "treemachine.auto_trees.defaults.TUsrDistribution.n_estimators"]], "n_trials_ (treemachine.auto_trees.optimizer_base.optimizercvmixin attribute)": [[11, "treemachine.auto_trees.optimizer_base.OptimizerCVMixIn.n_trials_"]], "optimizer_ (treemachine.auto_trees.optimizer_base.optimizercvmixin attribute)": [[11, "treemachine.auto_trees.optimizer_base.OptimizerCVMixIn.optimizer_"]], "predict() (treemachine.auto_trees.base.baseautotree method)": [[11, "treemachine.auto_trees.base.BaseAutoTree.predict"]], "predict_proba() (treemachine.auto_trees.classifier_cv.classifiercv method)": [[11, "treemachine.auto_trees.classifier_cv.ClassifierCV.predict_proba"]], "reg_alpha (treemachine.auto_trees.defaults.tusrdistribution attribute)": [[11, "treemachine.auto_trees.defaults.TUsrDistribution.reg_alpha"]], "reg_lambda (treemachine.auto_trees.defaults.tusrdistribution attribute)": [[11, "treemachine.auto_trees.defaults.TUsrDistribution.reg_lambda"]], "return_train_score_ (treemachine.auto_trees.optimizer_base.optimizercvmixin attribute)": [[11, "treemachine.auto_trees.optimizer_base.OptimizerCVMixIn.return_train_score_"]], "sampler (treemachine.auto_trees.classifier_cv.classifiercvoptions attribute)": [[11, "treemachine.auto_trees.classifier_cv.ClassifierCVOptions.sampler"]], "score() (treemachine.auto_trees.classifier_cv.classifiercv method)": [[11, "treemachine.auto_trees.classifier_cv.ClassifierCV.score"]], "score() (treemachine.auto_trees.regression_cv.regressioncv method)": [[11, "treemachine.auto_trees.regression_cv.RegressionCV.score"]], "set_score_request() (treemachine.auto_trees.classifier_cv.classifiercv method)": [[11, "treemachine.auto_trees.classifier_cv.ClassifierCV.set_score_request"]], "set_score_request() (treemachine.auto_trees.regression_cv.regressioncv method)": [[11, "treemachine.auto_trees.regression_cv.RegressionCV.set_score_request"]], "setup() (treemachine.auto_trees.optimizer_base.optimizercvmixin method)": [[11, "treemachine.auto_trees.optimizer_base.OptimizerCVMixIn.setup"]], "shap_values (treemachine.auto_trees.base.texplainerresults attribute)": [[11, "treemachine.auto_trees.base.TExplainerResults.shap_values"]], "study (treemachine.auto_trees.optimizer_base.optimizercvmixin property)": [[11, "treemachine.auto_trees.optimizer_base.OptimizerCVMixIn.study"]], "study_ (treemachine.auto_trees.optimizer_base.optimizercvmixin attribute)": [[11, "treemachine.auto_trees.optimizer_base.OptimizerCVMixIn.study_"]], "timeout_ (treemachine.auto_trees.optimizer_base.optimizercvmixin attribute)": [[11, "treemachine.auto_trees.optimizer_base.OptimizerCVMixIn.timeout_"]], "transform() (treemachine.auto_trees.transforms.identity method)": [[11, "treemachine.auto_trees.transforms.Identity.transform"]], "treemachine.auto_trees": [[11, "module-treemachine.auto_trees"]], "treemachine.auto_trees.base": [[11, "module-treemachine.auto_trees.base"]], "treemachine.auto_trees.classifier_cv": [[11, "module-treemachine.auto_trees.classifier_cv"]], "treemachine.auto_trees.defaults": [[11, "module-treemachine.auto_trees.defaults"]], "treemachine.auto_trees.metrics": [[11, "module-treemachine.auto_trees.metrics"]], "treemachine.auto_trees.optimizer_base": [[11, "module-treemachine.auto_trees.optimizer_base"]], "treemachine.auto_trees.regression_cv": [[11, "module-treemachine.auto_trees.regression_cv"]], "treemachine.auto_trees.transforms": [[11, "module-treemachine.auto_trees.transforms"]], "treemachine.auto_trees.types": [[11, "module-treemachine.auto_trees.types"]]}})